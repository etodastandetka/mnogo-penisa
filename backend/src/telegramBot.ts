import TelegramBot from 'node-telegram-bot-api';
import { config } from 'dotenv';

config();

const TELEGRAM_BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN;
const TELEGRAM_CHAT_ID = process.env.TELEGRAM_CHAT_ID;

let bot: TelegramBot | null = null;

if (TELEGRAM_BOT_TOKEN) {
  bot = new TelegramBot(TELEGRAM_BOT_TOKEN, { polling: false });
}

interface Order {
  id: number;
  orderNumber: string;
  customerName: string;
  customerPhone: string;
  deliveryAddress: string;
  totalAmount: number;
  status: string;
  items: Array<{
    productName: string;
    quantity: number;
    price: number;
  }>;
  createdAt: string;
}

export async function sendNewOrderNotification(order: Order): Promise<void> {
  if (!bot || !TELEGRAM_CHAT_ID) {
    return;
  }

  try {
    const message = formatOrderMessage(order);
    await bot.sendMessage(TELEGRAM_CHAT_ID, message, {
      parse_mode: 'HTML',
      disable_web_page_preview: true
    });
    } catch (error) {
    }
}

export async function sendStatusUpdateNotification(order: any, oldStatus: string): Promise<void> {
  if (!bot || !TELEGRAM_CHAT_ID) {
    return;
  }

  try {
    const message = formatStatusUpdateMessage(order, oldStatus);
    await bot.sendMessage(TELEGRAM_CHAT_ID, message, {
      parse_mode: 'HTML',
      disable_web_page_preview: true
    });
    } catch (error) {
    }
}

function formatOrderMessage(order: Order): string {
  const statusEmoji = getStatusEmoji(order.status);
  const statusText = getStatusText(order.status);
  
  return `
üÜï <b>–ù–æ–≤—ã–π –∑–∞–∫–∞–∑!</b>

üìã <b>–ó–∞–∫–∞–∑ #${order.orderNumber}</b>
üë§ <b>–ö–ª–∏–µ–Ω—Ç:</b> ${order.customerName}
üìû <b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> ${order.customerPhone}
üìç <b>–ê–¥—Ä–µ—Å:</b> ${order.deliveryAddress || '–ù–µ —É–∫–∞–∑–∞–Ω'}
üí∞ <b>–°—É–º–º–∞:</b> ${order.totalAmount} —Å–æ–º
${statusEmoji} <b>–°—Ç–∞—Ç—É—Å:</b> ${statusText}

üõí <b>–¢–æ–≤–∞—Ä—ã:</b>
${order.items.map(item => `‚Ä¢ ${item.productName} x${item.quantity} - ${item.price} —Å–æ–º`).join('\n')}

‚è∞ <b>–í—Ä–µ–º—è –∑–∞–∫–∞–∑–∞:</b> ${formatDate(order.createdAt)}
  `.trim();
}

function formatStatusUpdateMessage(order: any, oldStatus: string): string {
  const oldStatusEmoji = getStatusEmoji(oldStatus);
  const newStatusEmoji = getStatusEmoji(order.status);
  const oldStatusText = getStatusText(oldStatus);
  const newStatusText = getStatusText(order.status);
  
  return `
üîÑ <b>–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞</b>

üìã <b>–ó–∞–∫–∞–∑ #${order.orderNumber}</b>
üë§ <b>–ö–ª–∏–µ–Ω—Ç:</b> ${order.customerName}
${oldStatusEmoji} <b>–°—Ç–∞—Ä—ã–π —Å—Ç–∞—Ç—É—Å:</b> ${oldStatusText}
${newStatusEmoji} <b>–ù–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å:</b> ${newStatusText}

‚è∞ <b>–í—Ä–µ–º—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:</b> ${formatDate(new Date().toISOString())}
  `.trim();
}

function getStatusEmoji(status: string): string {
  switch (status) {
    case 'pending': return '‚è≥';
    case 'paid': return 'üí≥';
    case 'preparing': return 'üë®‚Äçüç≥';
    case 'ready': return '‚úÖ';
    case 'delivering': return 'üöö';
    case 'delivered': return 'üéâ';
    case 'cancelled': return '‚ùå';
    default: return 'üìã';
  }
}

function getStatusText(status: string): string {
  switch (status) {
    case 'pending': return '–û–∂–∏–¥–∞–µ—Ç –æ–ø–ª–∞—Ç—ã';
    case 'paid': return '–û–ø–ª–∞—á–µ–Ω';
    case 'preparing': return '–ì–æ—Ç–æ–≤–∏—Ç—Å—è';
    case 'ready': return '–ì–æ—Ç–æ–≤';
    case 'delivering': return '–í –¥–æ—Å—Ç–∞–≤–∫–µ';
    case 'delivered': return '–î–æ—Å—Ç–∞–≤–ª–µ–Ω';
    case 'cancelled': return '–û—Ç–º–µ–Ω–µ–Ω';
    default: return status;
  }
}

function formatDate(dateString: string): string {
  const date = new Date(dateString);
  return date.toLocaleString('ru-RU', {
    year: 'numeric',
    month: '2-digit',
    day: '2-digit',
    hour: '2-digit',
    minute: '2-digit'
  });
}

export async function testTelegramBot(): Promise<void> {
  if (!bot || !TELEGRAM_CHAT_ID) {
    throw new Error('Telegram –±–æ—Ç –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
  }

  try {
    const message = `
üß™ <b>–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ</b>

–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç Telegram –±–æ—Ç–∞ Mnogo Rolly.
–ï—Å–ª–∏ –≤—ã –≤–∏–¥–∏—Ç–µ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∑–Ω–∞—á–∏—Ç –±–æ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ!

‚è∞ <b>–í—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏:</b> ${formatDate(new Date().toISOString())}
    `.trim();

    await bot.sendMessage(TELEGRAM_CHAT_ID, message, {
      parse_mode: 'HTML',
      disable_web_page_preview: true
    });
    } catch (error) {
    throw error;
  }
}

export function getBotInfo(): { isConfigured: boolean; chatId?: string } {
  return {
    isConfigured: !!(TELEGRAM_BOT_TOKEN && TELEGRAM_CHAT_ID),
    chatId: TELEGRAM_CHAT_ID
  };
}

