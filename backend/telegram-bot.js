const TelegramBot = require('node-telegram-bot-api');
const sqlite3 = require('sqlite3').verbose();
const path = require('path');

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–æ—Ç–∞ (–∑–∞—Ö–∞—Ä–¥–∫–æ–∂–µ–Ω–æ)
const BOT_TOKEN = '8336008623:AAHWO3vRgVceBeJvjMVaPBdZMkNTBB-MHCc';
const ADMIN_GROUP_ID = '-1002728692510';
const WEBHOOK_URL = 'https://mnogo-rolly.kg/telegram-webhook';

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
const bot = new TelegramBot(BOT_TOKEN, { polling: false });

// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
const dbPath = path.join(__dirname, 'database.sqlite');
const db = new sqlite3.Database(dbPath);

// –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –¥–ª—è —Å–≤—è–∑–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –∑–∞–∫–∞–∑–∞–º–∏
db.run(`
  CREATE TABLE IF NOT EXISTS telegram_users (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    telegram_id INTEGER UNIQUE NOT NULL,
    username TEXT,
    first_name TEXT,
    last_name TEXT,
    phone TEXT,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP
  )
`);

db.run(`
  CREATE TABLE IF NOT EXISTS telegram_orders (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    telegram_id INTEGER NOT NULL,
    order_id INTEGER NOT NULL,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (telegram_id) REFERENCES telegram_users (telegram_id),
    FOREIGN KEY (order_id) REFERENCES orders (id)
  )
`);

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
bot.onText(/\/start/, async (msg) => {
  const chatId = msg.chat.id;
  const user = msg.from;
  
  try {
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î
    db.run(
      'INSERT OR IGNORE INTO telegram_users (telegram_id, username, first_name, last_name) VALUES (?, ?, ?, ?)',
      [user.id, user.username, user.first_name, user.last_name]
    );
    
    const welcomeMessage = `
üçï –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç –∑–∞–∫–∞–∑–æ–≤ "–ú–Ω–æ–≥–æ –ü–µ–Ω–∏—Å–∞"!

üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
/orders - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–æ–∏ –∑–∞–∫–∞–∑—ã
/order <–Ω–æ–º–µ—Ä> - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–∫–∞–∑–µ
/help - –ü–æ–º–æ—â—å

üí° –ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –µ–≥–æ –Ω–æ–º–µ—Ä –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /order <–Ω–æ–º–µ—Ä>
    `;
    
    bot.sendMessage(chatId, welcomeMessage);
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ /start:', error);
    bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
  }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /orders
bot.onText(/\/orders/, async (msg) => {
  const chatId = msg.chat.id;
  const userId = msg.from.id;
  
  try {
    db.all(`
      SELECT o.id, o.status, o.total_amount, o.created_at, o.delivery_address
      FROM orders o
      JOIN telegram_orders to ON o.id = to.order_id
      WHERE to.telegram_id = ?
      ORDER BY o.created_at DESC
      LIMIT 10
    `, [userId], (err, orders) => {
      if (err) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–æ–≤:', err);
        bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–æ–≤.');
        return;
      }
      
      if (orders.length === 0) {
        bot.sendMessage(chatId, '–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∑–∞–∫–∞–∑–æ–≤. –°–¥–µ–ª–∞–π—Ç–µ –ø–µ—Ä–≤—ã–π –∑–∞–∫–∞–∑ –Ω–∞ —Å–∞–π—Ç–µ! üõí');
        return;
      }
      
      let message = 'üìã –í–∞—à–∏ –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–∫–∞–∑—ã:\n\n';
      orders.forEach(order => {
        const status = getStatusEmoji(order.status);
        const date = new Date(order.created_at).toLocaleDateString('ru-RU');
        message += `${status} –ó–∞–∫–∞–∑ #${order.id}\n`;
        message += `üí∞ –°—É–º–º–∞: ${order.total_amount} ‚ÇΩ\n`;
        message += `üìÖ –î–∞—Ç–∞: ${date}\n`;
        message += `üìç –ê–¥—Ä–µ—Å: ${order.delivery_address || '–ù–µ —É–∫–∞–∑–∞–Ω'}\n`;
        message += `üìä –°—Ç–∞—Ç—É—Å: ${getStatusText(order.status)}\n\n`;
      });
      
      message += 'üí° –î–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /order <–Ω–æ–º–µ—Ä>';
      bot.sendMessage(chatId, message);
    });
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ /orders:', error);
    bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
  }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /order <–Ω–æ–º–µ—Ä>
bot.onText(/\/order (\d+)/, async (msg, match) => {
  const chatId = msg.chat.id;
  const userId = msg.from.id;
  const orderId = match[1];
  
  try {
    db.get(`
      SELECT o.*, GROUP_CONCAT(oi.quantity || 'x ' || p.name) as items
      FROM orders o
      LEFT JOIN order_items oi ON o.id = oi.order_id
      LEFT JOIN products p ON oi.product_id = p.id
      JOIN telegram_orders to ON o.id = to.order_id
      WHERE o.id = ? AND to.telegram_id = ?
      GROUP BY o.id
    `, [orderId, userId], (err, order) => {
      if (err) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞:', err);
        bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞.');
        return;
      }
      
      if (!order) {
        bot.sendMessage(chatId, '–ó–∞–∫–∞–∑ –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ —É –≤–∞—Å –Ω–µ—Ç –∫ –Ω–µ–º—É –¥–æ—Å—Ç—É–ø–∞.');
        return;
      }
      
      const status = getStatusEmoji(order.status);
      const date = new Date(order.created_at).toLocaleDateString('ru-RU');
      const time = new Date(order.created_at).toLocaleTimeString('ru-RU');
      
      let message = `${status} –ó–∞–∫–∞–∑ #${order.id}\n\n`;
      message += `üìÖ –î–∞—Ç–∞: ${date} –≤ ${time}\n`;
      message += `üí∞ –°—É–º–º–∞: ${order.total_amount} ‚ÇΩ\n`;
      message += `üìç –ê–¥—Ä–µ—Å: ${order.delivery_address || '–ù–µ —É–∫–∞–∑–∞–Ω'}\n`;
      message += `üì± –¢–µ–ª–µ—Ñ–æ–Ω: ${order.phone || '–ù–µ —É–∫–∞–∑–∞–Ω'}\n`;
      message += `üìä –°—Ç–∞—Ç—É—Å: ${getStatusText(order.status)}\n\n`;
      
      if (order.items) {
        message += `üõí –¢–æ–≤–∞—Ä—ã:\n${order.items}\n\n`;
      }
      
      message += `üìù –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: ${order.comment || '–ù–µ—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è'}`;
      
      bot.sendMessage(chatId, message);
    });
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ /order:', error);
    bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
  }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /help
bot.onText(/\/help/, async (msg) => {
  const chatId = msg.chat.id;
  
  const helpMessage = `
üîß –ü–æ–º–æ—â—å –ø–æ –±–æ—Ç—É

üìã –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º
/orders - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–æ–∏ –∑–∞–∫–∞–∑—ã
/order <–Ω–æ–º–µ—Ä> - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–∫–∞–∑–µ
/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É

üí° –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
‚Ä¢ /order 123 - –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∑–∞–∫–∞–∑ ‚Ññ123
‚Ä¢ /orders - —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∑–∞–∫–∞–∑–æ–≤

üåê –°–∞–π—Ç: https://your-domain.com
üìû –ü–æ–¥–¥–µ—Ä–∂–∫–∞: @admin_username
  `;
  
  bot.sendMessage(chatId, helpMessage);
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–Ω–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞)
bot.on('message', async (msg) => {
  if (msg.text && !msg.text.startsWith('/')) {
    const chatId = msg.chat.id;
    const userId = msg.from.id;
    const text = msg.text.trim();
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–º –∑–∞–∫–∞–∑–∞
    if (/^\d+$/.test(text)) {
      const orderId = parseInt(text);
      
      try {
        db.get(`
          SELECT o.*, GROUP_CONCAT(oi.quantity || 'x ' || p.name) as items
          FROM orders o
          LEFT JOIN order_items oi ON o.id = oi.order_id
          LEFT JOIN products p ON oi.product_id = p.id
          JOIN telegram_orders to ON o.id = to.order_id
          WHERE o.id = ? AND to.telegram_id = ?
          GROUP BY o.id
        `, [orderId, userId], (err, order) => {
          if (err) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞:', err);
            bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞.');
            return;
          }
          
          if (!order) {
            bot.sendMessage(chatId, '–ó–∞–∫–∞–∑ –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ —É –≤–∞—Å –Ω–µ—Ç –∫ –Ω–µ–º—É –¥–æ—Å—Ç—É–ø–∞.');
            return;
          }
          
          const status = getStatusEmoji(order.status);
          const date = new Date(order.created_at).toLocaleDateString('ru-RU');
          const time = new Date(order.created_at).toLocaleTimeString('ru-RU');
          
          let message = `${status} –ó–∞–∫–∞–∑ #${order.id}\n\n`;
          message += `üìÖ –î–∞—Ç–∞: ${date} –≤ ${time}\n`;
          message += `üí∞ –°—É–º–º–∞: ${order.total_amount} ‚ÇΩ\n`;
          message += `üìç –ê–¥—Ä–µ—Å: ${order.delivery_address || '–ù–µ —É–∫–∞–∑–∞–Ω'}\n`;
          message += `üì± –¢–µ–ª–µ—Ñ–æ–Ω: ${order.phone || '–ù–µ —É–∫–∞–∑–∞–Ω'}\n`;
          message += `üìä –°—Ç–∞—Ç—É—Å: ${getStatusText(order.status)}\n\n`;
          
          if (order.items) {
            message += `üõí –¢–æ–≤–∞—Ä—ã:\n${order.items}\n\n`;
          }
          
          message += `üìù –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: ${order.comment || '–ù–µ—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è'}`;
          
          bot.sendMessage(chatId, message);
        });
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –Ω–æ–º–µ—Ä–∞ –∑–∞–∫–∞–∑–∞:', error);
        bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
      }
    } else {
      bot.sendMessage(chatId, '–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /help –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏.');
    }
  }
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞ –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞
async function notifyClientAboutStatusChange(orderId, newStatus) {
  try {
    db.get(`
      SELECT to.telegram_id, o.total_amount, o.delivery_address
      FROM telegram_orders to
      JOIN orders o ON to.order_id = o.id
      WHERE to.order_id = ?
    `, [orderId], (err, result) => {
      if (err || !result) {
        console.error('–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –∑–∞–∫–∞–∑–∞:', orderId);
        return;
      }
      
      const status = getStatusEmoji(newStatus);
      const message = `
${status} –°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ #${orderId} –∏–∑–º–µ–Ω–µ–Ω!

üìä –ù–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å: ${getStatusText(newStatus)}
üí∞ –°—É–º–º–∞: ${result.total_amount} ‚ÇΩ
üìç –ê–¥—Ä–µ—Å: ${result.delivery_address || '–ù–µ —É–∫–∞–∑–∞–Ω'}

üîÑ –î–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /order ${orderId}
      `;
      
      bot.sendMessage(result.telegram_id, message);
    });
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–∏ –∫–ª–∏–µ–Ω—Ç–∞:', error);
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–æ–≤ –æ –Ω–æ–≤–æ–º –∑–∞–∫–∞–∑–µ
async function notifyAdminsAboutNewOrder(orderId, orderData) {
  try {
    const message = `
üÜï –ù–æ–≤—ã–π –∑–∞–∫–∞–∑ #${orderId}!

üë§ –ö–ª–∏–µ–Ω—Ç: ${orderData.name}
üì± –¢–µ–ª–µ—Ñ–æ–Ω: ${orderData.phone}
üìç –ê–¥—Ä–µ—Å: ${orderData.delivery_address}
üí∞ –°—É–º–º–∞: ${orderData.total_amount} ‚ÇΩ
üìù –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: ${orderData.comment || '–ù–µ—Ç'}

üõí –¢–æ–≤–∞—Ä—ã:
${orderData.items.map(item => `‚Ä¢ ${item.quantity}x ${item.name} - ${item.price} ‚ÇΩ`).join('\n')}

‚è∞ –í—Ä–µ–º—è: ${new Date().toLocaleString('ru-RU')}
    `;
    
    bot.sendMessage(ADMIN_GROUP_ID, message);
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–∏ –∞–¥–º–∏–Ω–æ–≤:', error);
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–æ–≤ –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞
async function notifyAdminsAboutStatusChange(orderId, oldStatus, newStatus) {
  try {
    const message = `
üîÑ –°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ #${orderId} –∏–∑–º–µ–Ω–µ–Ω!

üìä –°—Ç–∞—Ä—ã–π —Å—Ç–∞—Ç—É—Å: ${getStatusText(oldStatus)}
üìä –ù–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å: ${getStatusText(newStatus)}
‚è∞ –í—Ä–µ–º—è: ${new Date().toLocaleString('ru-RU')}
    `;
    
    bot.sendMessage(ADMIN_GROUP_ID, message);
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–∏ –∞–¥–º–∏–Ω–æ–≤ –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞:', error);
  }
}

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
function getStatusEmoji(status) {
  const statusMap = {
    'pending': '‚è≥',
    'confirmed': '‚úÖ',
    'preparing': 'üë®‚Äçüç≥',
    'ready': 'üöö',
    'delivered': 'üéâ',
    'cancelled': '‚ùå'
  };
  return statusMap[status] || '‚ùì';
}

function getStatusText(status) {
  const statusMap = {
    'pending': '–û–∂–∏–¥–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è',
    'confirmed': '–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω',
    'preparing': '–ì–æ—Ç–æ–≤–∏—Ç—Å—è',
    'ready': '–ì–æ—Ç–æ–≤ –∫ –¥–æ—Å—Ç–∞–≤–∫–µ',
    'delivered': '–î–æ—Å—Ç–∞–≤–ª–µ–Ω',
    'cancelled': '–û—Ç–º–µ–Ω–µ–Ω'
  };
  return statusMap[status] || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–≤—è–∑—ã–≤–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º Telegram
async function linkOrderWithTelegramUser(orderId, phone) {
  try {
    db.get('SELECT telegram_id FROM telegram_users WHERE phone = ?', [phone], (err, user) => {
      if (err || !user) {
        console.log('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–µ–ª–µ—Ñ–æ–Ω–æ–º', phone, '–Ω–µ –Ω–∞–π–¥–µ–Ω –≤ Telegram');
        return;
      }
      
      db.run('INSERT OR IGNORE INTO telegram_orders (telegram_id, order_id) VALUES (?, ?)', 
        [user.telegram_id, orderId], (err) => {
        if (err) {
          console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–≤—è–∑—ã–≤–∞–Ω–∏–∏ –∑–∞–∫–∞–∑–∞ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º:', err);
        } else {
          console.log('–ó–∞–∫–∞–∑', orderId, '—Å–≤—è–∑–∞–Ω —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º Telegram', user.telegram_id);
        }
      });
    });
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–≤—è–∑—ã–≤–∞–Ω–∏–∏ –∑–∞–∫–∞–∑–∞:', error);
  }
}

// –≠–∫—Å–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –æ—Å–Ω–æ–≤–Ω–æ–º API
module.exports = {
  bot,
  notifyClientAboutStatusChange,
  notifyAdminsAboutNewOrder,
  notifyAdminsAboutStatusChange,
  linkOrderWithTelegramUser
};

// –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ (–µ—Å–ª–∏ —Ñ–∞–π–ª –∑–∞–ø—É—â–µ–Ω –Ω–∞–ø—Ä—è–º—É—é)
if (require.main === module) {
  console.log('ü§ñ Telegram –±–æ—Ç –∑–∞–ø—É—â–µ–Ω...');
  
  // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ webhook
  bot.setWebHook(WEBHOOK_URL).then(() => {
    console.log('‚úÖ Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω:', WEBHOOK_URL);
  }).catch(error => {
    console.error('‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ webhook:', error);
  });
}
