const sqlite3 = require('sqlite3').verbose();
const path = require('path');

// –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
const dbPath = path.join(__dirname, 'data', 'mnogo_rolly.db');
const db = new sqlite3.Database(dbPath);

console.log('üîß –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:', dbPath);

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –∑–∞–∫–∞–∑–æ–≤
const clearOrders = () => {
  console.log('üóëÔ∏è –ù–∞—á–∏–Ω–∞–µ–º –æ—á–∏—Å—Ç–∫—É –∑–∞–∫–∞–∑–æ–≤...');
  
  // –°–Ω–∞—á–∞–ª–∞ —É–¥–∞–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –∑–∞–∫–∞–∑–æ–≤ (order_items)
  db.run('DELETE FROM order_items', function(err) {
    if (err) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∑–∞–∫–∞–∑–æ–≤:', err);
    } else {
      console.log('‚úÖ –£–¥–∞–ª–µ–Ω–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∑–∞–∫–∞–∑–æ–≤:', this.changes);
    }
    
    // –ó–∞—Ç–µ–º —É–¥–∞–ª—è–µ–º —á–µ–∫–∏ (receipts)
    db.run('DELETE FROM receipts', function(err) {
      if (err) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —á–µ–∫–æ–≤:', err);
      } else {
        console.log('‚úÖ –£–¥–∞–ª–µ–Ω–æ —á–µ–∫–æ–≤:', this.changes);
      }
      
      // –ù–∞–∫–æ–Ω–µ—Ü —É–¥–∞–ª—è–µ–º —Å–∞–º–∏ –∑–∞–∫–∞–∑—ã
      db.run('DELETE FROM orders', function(err) {
        if (err) {
          console.error('‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–æ–≤:', err);
        } else {
          console.log('‚úÖ –£–¥–∞–ª–µ–Ω–æ –∑–∞–∫–∞–∑–æ–≤:', this.changes);
          console.log('üéâ –í—Å–µ –∑–∞–∫–∞–∑—ã —É—Å–ø–µ—à–Ω–æ –æ—á–∏—â–µ–Ω—ã!');
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        db.get('SELECT COUNT(*) as count FROM orders', (err, result) => {
          if (err) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏:', err);
          } else {
            console.log('üìä –û—Å—Ç–∞–ª–æ—Å—å –∑–∞–∫–∞–∑–æ–≤ –≤ –±–∞–∑–µ:', result.count);
          }
          
          // –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
          db.close((err) => {
            if (err) {
              console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:', err);
            } else {
              console.log('‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∑–∞–∫—Ä—ã—Ç–∞');
            }
          });
        });
      });
    });
  });
};

// –ó–∞–ø—É—Å–∫–∞–µ–º –æ—á–∏—Å—Ç–∫—É
clearOrders();



