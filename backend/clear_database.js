const sqlite3 = require('sqlite3');
const path = require('path');

const dbPath = path.join(__dirname, 'data', 'mnogo_rolly.db');
const db = new sqlite3.Database(dbPath);

console.log('üßπ –ù–∞—á–∏–Ω–∞–µ–º –ø–æ–ª–Ω—É—é –æ—á–∏—Å—Ç–∫—É –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...');
console.log('‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –≠—Ç–æ —É–¥–∞–ª–∏—Ç –í–°–ï –¥–∞–Ω–Ω—ã–µ!');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —Ç–∞–±–ª–∏—Ü
const clearTable = (tableName) => {
  return new Promise((resolve, reject) => {
    db.run(`DELETE FROM ${tableName}`, function(err) {
      if (err) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ —Ç–∞–±–ª–∏—Ü—ã ${tableName}:`, err.message);
        reject(err);
      } else {
        console.log(`‚úÖ –¢–∞–±–ª–∏—Ü–∞ ${tableName} –æ—á–∏—â–µ–Ω–∞. –£–¥–∞–ª–µ–Ω–æ ${this.changes} –∑–∞–ø–∏—Å–µ–π`);
        resolve(this.changes);
      }
    });
  });
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–±—Ä–æ—Å–∞ –∞–≤—Ç–æ–∏–Ω–∫—Ä–µ–º–µ–Ω—Ç–∞
const resetAutoIncrement = (tableName) => {
  return new Promise((resolve, reject) => {
    db.run(`DELETE FROM sqlite_sequence WHERE name = ?`, [tableName], function(err) {
      if (err) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ —Å–±—Ä–æ—Å–∞ –∞–≤—Ç–æ–∏–Ω–∫—Ä–µ–º–µ–Ω—Ç–∞ –¥–ª—è ${tableName}:`, err.message);
        reject(err);
      } else {
        console.log(`‚úÖ –ê–≤—Ç–æ–∏–Ω–∫—Ä–µ–º–µ–Ω—Ç –¥–ª—è ${tableName} —Å–±—Ä–æ—à–µ–Ω`);
        resolve();
      }
    });
  });
};

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ—á–∏—Å—Ç–∫–∏
const clearDatabase = async () => {
  try {
    console.log('\nüìä –ù–∞—á–∏–Ω–∞–µ–º –æ—á–∏—Å—Ç–∫—É —Ç–∞–±–ª–∏—Ü...\n');
    
    // –û—á–∏—â–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ (—Å–Ω–∞—á–∞–ª–∞ –∑–∞–≤–∏—Å–∏–º—ã–µ)
    await clearTable('order_items');
    await clearTable('orders');
    await clearTable('products');
    await clearTable('users');
    
    console.log('\nüîÑ –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∞–≤—Ç–æ–∏–Ω–∫—Ä–µ–º–µ–Ω—Ç—ã...\n');
    
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∞–≤—Ç–æ–∏–Ω–∫—Ä–µ–º–µ–Ω—Ç—ã
    await resetAutoIncrement('order_items');
    await resetAutoIncrement('orders');
    await resetAutoIncrement('products');
    await resetAutoIncrement('users');
    
    console.log('\n‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—á–∏—â–µ–Ω–∞!');
    console.log('üìù –í—Å–µ —Ç–∞–±–ª–∏—Ü—ã –ø—É—Å—Ç—ã –∏ –≥–æ—Ç–æ–≤—ã –∫ –Ω–æ–≤—ã–º –¥–∞–Ω–Ω—ã–º');
    
  } catch (error) {
    console.error('\n‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ:', error.message);
  } finally {
    db.close();
    console.log('\nüîí –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –∑–∞–∫—Ä—ã—Ç–æ');
  }
};

// –ó–∞–ø—É—Å–∫–∞–µ–º –æ—á–∏—Å—Ç–∫—É
clearDatabase();
