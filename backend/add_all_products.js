const sqlite3 = require('sqlite3').verbose();
const path = require('path');

// –ü—É—Ç—å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
const dbPath = path.join(__dirname, 'data/mnogo_rolly.db');

// –°–æ–∑–¥–∞–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
const db = new sqlite3.Database(dbPath);

console.log('üõí –°–∫—Ä–∏–ø—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤—Å–µ—Ö —Ç–æ–≤–∞—Ä–æ–≤ –∑–∞–ø—É—â–µ–Ω');
console.log('üìÅ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö:', dbPath);

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞
function addProduct(name, description, price, imageUrl, category, isPopular = 0, isAvailable = 1) {
  return new Promise((resolve, reject) => {
    const sql = `
      INSERT OR REPLACE INTO products (name, description, price, image_url, category, is_popular, is_available, created_at)
      VALUES (?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP)
    `;
    
    db.run(sql, [name, description, price, imageUrl, category, isPopular, isAvailable], function(err) {
      if (err) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ "${name}":`, err.message);
        reject(err);
      } else {
        console.log(`‚úÖ –î–æ–±–∞–≤–ª–µ–Ω —Ç–æ–≤–∞—Ä: ${name} - ${price} —Å–æ–º`);
        resolve(this.lastID);
      }
    });
  });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤—Å–µ—Ö —Ç–æ–≤–∞—Ä–æ–≤ —Å –∞–∫—Ç—É–∞–ª—å–Ω—ã–º–∏ —Ü–µ–Ω–∞–º–∏
async function addAllProducts() {
  console.log('\nüîÑ –ù–∞—á–∏–Ω–∞–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤—Å–µ—Ö —Ç–æ–≤–∞—Ä–æ–≤ —Å –∞–∫—Ç—É–∞–ª—å–Ω—ã–º–∏ —Ü–µ–Ω–∞–º–∏...');
  
  try {
    // üç£ –†–û–õ–õ–´
    console.log('\nüç£ –î–æ–±–∞–≤–ª—è–µ–º —Ä–æ–ª–ª—ã...');
    
    await addProduct('–ö–∏–æ—Ç–æ', '–†–∏—Å 140 –≥—Ä, –Ω–æ—Ä–∏ 1 —à—Ç, —Å—ã—Ä 30 –≥—Ä, –æ–≥—É—Ä–µ—Ü 20 –≥—Ä, –∫—Ä–µ–≤–µ—Ç–∫–∏ 20 –≥—Ä, –∫—É–Ω–∂—É—Ç 20 –≥—Ä, —Å–æ—É—Å –¥–ª—è –∑–∞–ø–µ–∫–∞–Ω–∏—è 50 –≥—Ä', 490, null, 'rolls', 1, 1);
    await addProduct('–ó–∞–ø–µ—á–µ–Ω–Ω–∞—è –∫–∞–ª–∏—Ñ–æ—Ä–Ω–∏—è', '–ó–∞–ø–µ—á–µ–Ω–Ω–∞—è –∫–∞–ª–∏—Ñ–æ—Ä–Ω–∏—è —Å –∫—Ä–∞–±–æ–≤—ã–º –º–∏–∫—Å–æ–º, –æ–≥—É—Ä—Ü–æ–º –∏ —Ç–æ–±–∏–∫–æ. 10 —à—Ç—É–∫.', 410, null, 'rolls', 1, 1);
    await addProduct('–ö–∞–Ω–∞–¥–∞', '–†–∏—Å 140 –≥—Ä, –Ω–æ—Ä–∏ 1 —à—Ç, —Å—ã—Ä 30 –≥—Ä, –æ–≥—É—Ä–µ—Ü 20 –≥—Ä, —É–≥–æ—Ä—å —Å–ª–∞–π—Å, —É–Ω–∞–≥–∏ 10 –≥—Ä, –∫—É–Ω–∂—É—Ç 10 –≥—Ä', 450, null, 'rolls', 1, 1);
    await addProduct('–û–≥—É—Ä–µ—Ü', '–†–∏—Å 90 –≥—Ä, –Ω–æ—Ä–∏ 1 —à—Ç, –æ–≥—É—Ä–µ—Ü 30 –≥—Ä, –∫—É–Ω–∂—É—Ç 10 –≥—Ä', 270, null, 'rolls', 0, 1);
    await addProduct('–°–Ω–µ–∂–Ω–∞—è –∫–∞–ª–∏—Ñ–æ—Ä–Ω–∏—è', '–†–∏—Å 140 –≥—Ä, –Ω–æ—Ä–∏ 1 —à—Ç, –∫—Ä–∞–±–æ–≤—ã–π –º–∏–∫—Å, –æ–≥—É—Ä–µ—Ü 20 –≥—Ä, —Ç–æ–±–∏–∫–æ –∫—Ä–∞—Å–Ω—ã–π 15 –≥—Ä', 430, null, 'rolls', 0, 1);
    await addProduct('–û–ø–∞–ª–µ–Ω–Ω—ã–π —Å –ª–æ—Å–æ—Å–µ–º', '–†–∏—Å 120 –≥—Ä, —Å—ã—Ä 30 –≥—Ä, –Ω–æ—Ä–∏ 1 —à—Ç, –æ–≥—É—Ä–µ—Ü 20 –≥—Ä, –ª–æ—Å–æ—Å—å 50 –≥—Ä, —É–Ω–∞–≥–∏ 15 –≥—Ä, –∫—É–Ω–∂—É—Ç 5 –≥—Ä', 480, null, 'rolls', 1, 1);
    await addProduct('–•—Ä—É—Å—Ç—è—â–∞—è –∞—Ä–∏–≥–∞—Ç–æ', '–†–∏—Å 100 –≥—Ä, –Ω–æ—Ä–∏ 1 —à—Ç, –∫–∞—Ç–∞–∏—Ñ–∏ 30 –≥—Ä, –∫—Ä–µ–≤–µ—Ç–∫–∏ 20 –≥—Ä, –æ–≥—É—Ä–µ—Ü 20 –≥—Ä, —Å–æ—É—Å –∞—Ä–∏–≥–∞—Ç–æ 20 –≥—Ä, —É–Ω–∞–≥–∏ 10 –≥—Ä', 490, null, 'rolls', 1, 1);
    await addProduct('–ó–∞–ø–µ—á–µ–Ω–Ω—ã–π —Å –ª–æ—Å–æ—Å–µ–º', '–†–∏—Å 140 –≥—Ä, –Ω–æ—Ä–∏ 1 —à—Ç, —Å—ã—Ä 30 –≥—Ä, –æ–≥—É—Ä–µ—Ü 20 –≥—Ä, –ª–æ—Å–æ—Å—å –±—Ä—É—Å–æ–∫ 30 –≥—Ä, —Å–æ—É—Å –¥–ª—è –∑–∞–ø–µ–∫–∞–Ω–∏—è', 480, null, 'rolls', 1, 1);
    await addProduct('–¢–µ–º–ø—É—Ä–∞ —Å –ª–æ—Å–æ—Å–µ–º', '–†–∏—Å 140 –≥—Ä, –Ω–æ—Ä–∏ 1 —à—Ç, —Å—ã—Ä 30 –≥—Ä, –æ–≥—É—Ä–µ—Ü 20 –≥—Ä, –ª–æ—Å–æ—Å—å –±—Ä—É—Å–æ–∫ 30 –≥—Ä', 420, null, 'rolls', 0, 1);
    await addProduct('–û—Å—Ç—Ä—ã–π –ª–æ—Å–æ—Å—å', '–†–∏—Å 140 –≥—Ä, –Ω–æ—Ä–∏ 1 —à—Ç, —Å–ø–∞–π—Å 20 –≥—Ä, –æ–≥—É—Ä–µ—Ü 20 –≥—Ä, –ª–æ—Å–æ—Å—å –±—Ä—É—Å–æ–∫ 30 –≥—Ä', 430, null, 'rolls', 0, 1);
    await addProduct('–§–∏–ª–∞–¥–µ–ª—å—Ñ–∏—è —Å —É–≥—Ä—ë–º', '–†–∏—Å 100 –≥—Ä, –Ω–æ—Ä–∏ 1 —à—Ç, —Å—ã—Ä 30 –≥—Ä, –æ–≥—É—Ä–µ—Ü 20 –≥—Ä, —É–≥–æ—Ä—å 50 –≥—Ä, —É–Ω–∞–≥–∏ 5 –≥—Ä, –∫—É–Ω–∂—É—Ç 5 –≥—Ä', 500, null, 'rolls', 1, 1);
    await addProduct('–ü—Ä–æ—Å—Ç–æ –ª–æ—Å–æ—Å—å', '–†–∏—Å 90 –≥—Ä, –Ω–æ—Ä–∏ 1 —à—Ç, –æ–≥—É—Ä–µ—Ü 30 –≥—Ä, –ª–æ—Å–æ—Å—å –±—Ä—É—Å–æ–∫ 30 –≥—Ä', 320, null, 'rolls', 0, 1);
    await addProduct('–ö—Ä–µ–≤–µ—Ç–∫–∏ —Å —Ç–∞–º–∞–≥–æ', '–†–∏—Å 110 –≥—Ä, —Å—ã—Ä 20 –≥—Ä, –Ω–æ—Ä–∏ 1 —à—Ç, —Ç–æ–±–∏–∫–æ 10 –≥—Ä, –æ–º–ª–µ—Ç 20 –≥—Ä, –æ–≥—É—Ä–µ—Ü 20 –≥—Ä, –∫—Ä–µ–≤–µ—Ç–∫–∏ 40 –≥—Ä, —Å–æ—É—Å —Å–ø–∞–π—Å 20 –≥—Ä', 520, null, 'rolls', 1, 1);
    await addProduct('–ß–∏–∫–∫–µ–Ω —Ä–æ–ª–ª', '–†–∏—Å 140 –≥—Ä, –Ω–æ—Ä–∏ 1 —à—Ç, —Å—ã—Ä 30 –≥—Ä, –æ–≥—É—Ä–µ—Ü 20 –≥—Ä, –∫—É—Ä–∏—Ü–∞ 30 –≥—Ä, —Å–æ—É—Å –¥–ª—è –∑–∞–ø–µ–∫–∞–Ω–∏—è', 420, null, 'rolls', 0, 1);

    // üçü –°–ù–≠–ö–ò
    console.log('\nüçü –î–æ–±–∞–≤–ª—è–µ–º —Å–Ω—ç–∫–∏...');
    
    await addProduct('–ö–∞—Ä—Ç–æ—à–∫–∞ —Ñ—Ä–∏', '–ö–∞—Ä—Ç–æ—Ñ–µ–ª—å —Ñ—Ä–∏ 200 –≥—Ä', 180, null, 'snacks', 0, 1);
    await addProduct('–ù–∞–≥–≥–µ—Ç—Å—ã', '–ö–∞—Ä—Ç–æ—Ñ–µ–ª—å —Ñ—Ä–∏ 200 –≥—Ä + –Ω–∞–≥–≥–µ—Ç—Å—ã 6 —à—Ç', 150, null, 'snacks', 1, 1);

    // üçó –ö–†–´–õ–¨–Ø
    console.log('\nüçó –î–æ–±–∞–≤–ª—è–µ–º –∫—Ä—ã–ª—å—è...');
    
    await addProduct('–ö—Ä—ã–ª—å—è –∫—É—Ä–∏–Ω—ã–µ 12 —à—Ç', '–ö—Ä—ã–ª—å—è –∫—É—Ä–∏–Ω—ã–µ 12 —à—Ç', 590, null, 'wings', 1, 1);
    await addProduct('–ö—Ä—ã–ª—å—è –∫—É—Ä–∏–Ω—ã–µ 18 —à—Ç', '–ö—Ä—ã–ª—å—è –∫—É—Ä–∏–Ω—ã–µ 18 —à—Ç + Coca-Cola 0.3–ª', 850, null, 'wings', 0, 1);
    await addProduct('–ö—Ä—ã–ª—å—è –∫—É—Ä–∏–Ω—ã–µ 25 —à—Ç', '–ö—Ä—ã–ª—å—è –∫—É—Ä–∏–Ω—ã–µ 25 —à—Ç –¥–ª—è –∫–æ–º–ø–∞–Ω–∏–∏', 1090, null, 'wings', 0, 1);
    await addProduct('–ö—Ä—ã–ª—å—è –∫—É—Ä–∏–Ω—ã–µ 32 —à—Ç', '–ö—Ä—ã–ª—å—è –∫—É—Ä–∏–Ω—ã–µ 32 —à—Ç —Å 3 —Å–æ—É—Å–∞–º–∏', 1590, null, 'wings', 0, 1);

    // ü•´ –°–û–£–°–´
    console.log('\nü•´ –î–æ–±–∞–≤–ª—è–µ–º —Å–æ—É—Å—ã...');
    
    await addProduct('–°–æ–µ–≤—ã–π —Å–æ—É—Å', '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π —Å–æ–µ–≤—ã–π —Å–æ—É—Å', 70, null, 'sauces', 0, 1);
    await addProduct('–í–∞—Å–∞–±–∏', '–û—Å—Ç—Ä—ã–π —è–ø–æ–Ω—Å–∫–∏–π —Ö—Ä–µ–Ω', 80, null, 'sauces', 0, 1);
    await addProduct('–ò–º–±–∏—Ä—å', '–ú–∞—Ä–∏–Ω–æ–≤–∞–Ω–Ω—ã–π –∏–º–±–∏—Ä—å', 70, null, 'sauces', 0, 1);

    // üçï –ü–ò–¶–¶–ê
    console.log('\nüçï –î–æ–±–∞–≤–ª—è–µ–º –ø–∏—Ü—Ü—É...');
    
    await addProduct('–ß–µ—Ç—ã—Ä–µ —Å—ã—Ä–∞', '–¢–æ–º–∞—Ç–Ω—ã–π —Å–æ—É—Å, –º–æ—Ü–∞—Ä–µ–ª–ª–∞, –ø–∞—Ä–º–µ–∑–∞–Ω, –≥–æ—Ä–≥–æ–Ω–∑–æ–ª–∞, —Ä–∏–∫–æ—Ç—Ç–∞', 590, null, 'pizza', 1, 1);
    await addProduct('–ü–µ–ø–ø–µ—Ä–æ–Ω–∏', '–¢–æ–º–∞—Ç–Ω—ã–π —Å–æ—É—Å, –º–æ—Ü–∞—Ä–µ–ª–ª–∞, –ø–µ–ø–ø–µ—Ä–æ–Ω–∏', 500, null, 'pizza', 1, 1);
    await addProduct('–ú–∞—Ä–≥–∞—Ä–∏—Ç–∞', '–¢–æ–º–∞—Ç–Ω—ã–π —Å–æ—É—Å, –º–æ—Ü–∞—Ä–µ–ª–ª–∞, –±–∞–∑–∏–ª–∏–∫', 450, null, 'pizza', 0, 1);
    await addProduct('–ü–∏—Ü—Ü–∞ —Å –≥—Ä—É—à–µ–π –∏ –≥–æ—Ä–≥–æ–Ω–∑–æ–ª–æ–π', '–° –≥—Ä—É—à–µ–π –∏ –≥–æ—Ä–≥–æ–Ω–∑–æ–ª–æ–π', 620, null, 'pizza', 0, 1);
    await addProduct('–ü–∏—Ü—Ü–∞ —Å –∫—É—Ä–∏—Ü–µ–π –∏ —Ç–æ–º–∞—Ç–∞–º–∏', '–ö—É—Ä–∏—Ü–∞ –∏ —Ç–æ–º–∞—Ç—ã', 520, null, 'pizza', 0, 1);

    // ü•§ –ù–ê–ü–ò–¢–ö–ò
    console.log('\nü•§ –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞–ø–∏—Ç–∫–∏...');
    
    await addProduct('–ö–æ–ª–∞ 0.5–ª', '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –≥–∞–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –Ω–∞–ø–∏—Ç–æ–∫', 120, null, 'drinks', 1, 1);
    await addProduct('–ö–æ–ª–∞ 1–ª', '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –≥–∞–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –Ω–∞–ø–∏—Ç–æ–∫', 180, null, 'drinks', 0, 1);
    await addProduct('–§–∞–Ω—Ç–∞ 0.5–ª', '–û—Å–≤–µ–∂–∞—é—â–∏–π –∞–ø–µ–ª—å—Å–∏–Ω–æ–≤—ã–π –Ω–∞–ø–∏—Ç–æ–∫', 120, null, 'drinks', 1, 1);
    await addProduct('–§–∞–Ω—Ç–∞ 1–ª', '–û—Å–≤–µ–∂–∞—é—â–∏–π –∞–ø–µ–ª—å—Å–∏–Ω–æ–≤—ã–π –Ω–∞–ø–∏—Ç–æ–∫', 180, null, 'drinks', 0, 1);
    await addProduct('Fuse Tea –ü–µ—Ä—Å–∏–∫', '–û—Å–≤–µ–∂–∞—é—â–∏–π —á–∞–π —Å –ø–µ—Ä—Å–∏–∫–æ–º', 100, null, 'drinks', 0, 1);
    await addProduct('Fuse Tea –†–æ–º–∞—à–∫–∞', '–£—Å–ø–æ–∫–∞–∏–≤–∞—é—â–∏–π —á–∞–π —Å —Ä–æ–º–∞—à–∫–æ–π', 100, null, 'drinks', 0, 1);

    // üç± –°–ï–¢–´
    console.log('\nüç± –î–æ–±–∞–≤–ª—è–µ–º —Å–µ—Ç—ã...');
    
    await addProduct('–ú–∏–Ω–∏ —Å–µ—Ç', '–ù–∞–±–æ—Ä –∏–∑ 4 —Ä–æ–ª–ª–æ–≤ –Ω–∞ –≤—ã–±–æ—Ä', 1200, null, 'sets', 1, 1);
    await addProduct('–°–µ—Ç "–°–µ–º–µ–π–Ω—ã–π"', '–ù–∞–±–æ—Ä –∏–∑ 8 —Ä–æ–ª–ª–æ–≤ –¥–ª—è –≤—Å–µ–π —Å–µ–º—å–∏', 2200, null, 'sets', 1, 1);

    console.log('\n‚úÖ –í—Å–µ —Ç–æ–≤–∞—Ä—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!');
    
  } catch (error) {
    console.error('\n‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤:', error.message);
    throw error;
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
function checkResult() {
  return new Promise((resolve, reject) => {
    console.log('\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç...');
    
    // –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º —Ç–æ–≤–∞—Ä—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
    const categories = {
      'rolls': 'üç£ –†–æ–ª–ª—ã',
      'snacks': 'üçü –°–Ω—ç–∫–∏', 
      'wings': 'üçó –ö—Ä—ã–ª—å—è',
      'sauces': 'ü•´ –°–æ—É—Å—ã',
      'pizza': 'üçï –ü–∏—Ü—Ü–∞',
      'drinks': 'ü•§ –ù–∞–ø–∏—Ç–∫–∏',
      'sets': 'üç± –°–µ—Ç—ã'
    };
    
    db.all('SELECT category, COUNT(*) as count FROM products GROUP BY category ORDER BY category', (err, categories_result) => {
      if (err) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥—Å—á–µ—Ç–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π:', err.message);
      } else {
        console.log('\nüìä –¢–æ–≤–∞—Ä—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º:');
        categories_result.forEach(row => {
          const emoji = categories[row.category] || row.category;
          console.log(`  ${emoji}: ${row.count} —Ç–æ–≤–∞—Ä–æ–≤`);
        });
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
      db.get('SELECT COUNT(*) as total FROM products', (err, result) => {
        if (err) {
          console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–±—â–µ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞:', err.message);
          reject(err);
        } else {
          console.log(`\nüìä –í—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤: ${result.total}`);
          resolve();
        }
      });
    });
  });
}

// –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
async function main() {
  try {
    // –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä—ã
    await addAllProducts();
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    await checkResult();
    
    console.log('\n‚úÖ –°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!');
    console.log('üéØ –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ - –≤—Å–µ —Ç–æ–≤–∞—Ä—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã —Å –∞–∫—Ç—É–∞–ª—å–Ω—ã–º–∏ —Ü–µ–Ω–∞–º–∏!');
    
  } catch (error) {
    console.error('\n‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Å–∫—Ä–∏–ø—Ç–∞:', error.message);
    process.exit(1);
  } finally {
    // –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
    db.close((err) => {
      if (err) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:', err.message);
      } else {
        console.log('üîí –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –∑–∞–∫—Ä—ã—Ç–æ');
      }
      process.exit(0);
    });
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç
main();
