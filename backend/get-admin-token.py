#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import requests
import json

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
API_BASE_URL = 'https://mnogo-rolly.online/api'
ADMIN_EMAIL = 'admin@example.com'  # –ó–∞–º–µ–Ω–∏ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π email
ADMIN_PASSWORD = 'admin123'         # –ó–∞–º–µ–Ω–∏ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π –ø–∞—Ä–æ–ª—å

def get_admin_token():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –∞–¥–º–∏–Ω–∞"""
    try:
        print("üîë –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –∞–¥–º–∏–Ω–∞...")
        
        # –î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞
        login_data = {
            'email': ADMIN_EMAIL,
            'password': ADMIN_PASSWORD
        }
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –≤—Ö–æ–¥
        response = requests.post(f"{API_BASE_URL}/auth/login", json=login_data, timeout=10)
        
        print(f"üì° –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
        
        if response.status_code == 200:
            data = response.json()
            print(f"üìÑ –û—Ç–≤–µ—Ç API: {json.dumps(data, indent=2, ensure_ascii=False)}")
            
            # –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–æ–∫–µ–Ω
            if 'access_token' in data:
                token = data['access_token']
                print(f"‚úÖ –¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω: {token[:20]}...")
                return token
            elif 'token' in data:
                token = data['token']
                print(f"‚úÖ –¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω: {token[:20]}...")
                return token
            else:
                print("‚ùå –¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –æ—Ç–≤–µ—Ç–µ")
                print(f"–î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–æ–ª—è: {list(data.keys())}")
                return None
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞ (—Å—Ç–∞—Ç—É—Å: {response.status_code})")
            print(f"–û—Ç–≤–µ—Ç: {response.text}")
            return None
            
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")
        return None
    except Exception as e:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        return None

def test_token(token):
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞"""
    if not token:
        return False
        
    try:
        print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞...")
        
        headers = {
            'Authorization': f'Bearer {token}',
            'Content-Type': 'application/json'
        }
        
        # –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –∑–∞–∫–∞–∑—ã
        response = requests.get(f"{API_BASE_URL}/admin/orders", headers=headers, timeout=10)
        
        print(f"üì° –¢–µ—Å—Ç API: —Å—Ç–∞—Ç—É—Å {response.status_code}")
        
        if response.status_code == 200:
            print("‚úÖ –¢–æ–∫–µ–Ω —Ä–∞–±–æ—Ç–∞–µ—Ç!")
            return True
        else:
            print(f"‚ùå –¢–æ–∫–µ–Ω –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç (—Å—Ç–∞—Ç—É—Å: {response.status_code})")
            print(f"–û—Ç–≤–µ—Ç: {response.text}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        return False

if __name__ == "__main__":
    print("üöÄ –°–∫—Ä–∏–ø—Ç –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞ –∞–¥–º–∏–Ω–∞")
    print("=" * 50)
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω
    token = get_admin_token()
    
    if token:
        print("\n" + "=" * 50)
        print("üîë –¢–û–ö–ï–ù –ü–û–õ–£–ß–ï–ù –£–°–ü–ï–®–ù–û!")
        print("=" * 50)
        print(f"–¢–æ–∫–µ–Ω: {token}")
        print("=" * 50)
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ç–æ–∫–µ–Ω
        test_token(token)
        
        print("\nüí° –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Ç–æ–∫–µ–Ω –∏ –≤—Å—Ç–∞–≤—å—Ç–µ –≤ telegram_bot.py")
        
    else:
        print("\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω!")
        print("üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ email –∏ –ø–∞—Ä–æ–ª—å –≤ —Å–∫—Ä–∏–ø—Ç–µ")
