const crypto = require('crypto');

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è O!Dengi API
const ODENGI_CONFIG = {
  version: 1005,
  sid: '5240752550', // –ü—Ä–æ–¥–∞–∫—à–Ω SID
  password: 'R^@OVPC|5@{64}G', // –ü—Ä–æ–¥–∞–∫—à–Ω –ø–∞—Ä–æ–ª—å
  serverUrl: 'https://api.dengi.o.kg/api/json/json.php', // –ü—Ä–æ–¥–∞–∫—à–Ω URL
  lang: 'ru'
};

class ODengiService {
  constructor() {
    this.config = ODENGI_CONFIG;
  }

  // –°–æ–∑–¥–∞–Ω–∏–µ HMAC-MD5 –ø–æ–¥–ø–∏—Å–∏
  createHash(jsonString, password = this.config.password) {
    return crypto.createHmac('md5', password).update(jsonString).digest('hex');
  }

  // –°–æ–∑–¥–∞–Ω–∏–µ JSON –±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤ –∏ –ø–µ—Ä–µ–Ω–æ—Å–æ–≤
  createCompactJson(obj) {
    return JSON.stringify(obj, null, '').replace(/\s+/g, '');
  }

  // –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞
  createRequest(cmd, data) {
    const mktime = Date.now().toString();
    
    const requestData = {
      cmd,
      version: this.config.version,
      sid: this.config.sid,
      mktime,
      lang: this.config.lang,
      data
    };
    
    // –°–æ–∑–¥–∞–µ–º JSON –±–µ–∑ –ø–æ–¥–ø–∏—Å–∏
    const jsonString = this.createCompactJson(requestData);
    
    // –°–æ–∑–¥–∞–µ–º –ø–æ–¥–ø–∏—Å—å
    const hash = this.createHash(jsonString);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–¥–ø–∏—Å—å –∫ –∑–∞–ø—Ä–æ—Å—É
    requestData.hash = hash;
    
    return requestData;
  }

  // –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞
  async sendRequest(requestData) {
    try {
      console.log('üì§ ODengi API –∑–∞–ø—Ä–æ—Å:', JSON.stringify(requestData, null, 2));
      
      const response = await fetch(this.config.serverUrl, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json; charset=utf-8'
        },
        body: JSON.stringify(requestData)
      });
      
      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }
      
      const responseData = await response.json();
      console.log('üì• ODengi API –æ—Ç–≤–µ—Ç:', JSON.stringify(responseData, null, 2));
      
      return responseData;
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ ODengi API –∑–∞–ø—Ä–æ—Å–∞:', error);
      throw error;
    }
  }

  // –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–≤–æ–π—Å–∞ –¥–ª—è QR-–æ–ø–ª–∞—Ç—ã
  async createInvoice(orderData) {
    try {
      const { orderId, amount, description, customerPhone, resultUrl } = orderData;
      
      const requestData = this.createRequest('createInvoice', {
        order_id: orderId,
        desc: description || `–ó–∞–∫–∞–∑ #${orderId}`,
        amount: Math.round(amount * 100), // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ –∫–æ–ø–µ–π–∫–∏
        currency: 'KGS',
        test: 1, // –¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º
        long_term: 0, // –û–¥–Ω–æ—Ä–∞–∑–æ–≤—ã–π —Å—á–µ—Ç
        user_to: customerPhone ? `996${customerPhone.replace(/\D/g, '')}` : undefined,
        result_url: resultUrl || `${process.env.BASE_URL || 'http://localhost:3000'}/api/odengi/callback`,
        send_push: customerPhone ? 1 : 0,
        send_sms: customerPhone ? 1 : 0
      });
      
      const response = await this.sendRequest(requestData);
      
      if (response.status === 'ok') {
        return {
          success: true,
          invoiceId: response.invoice_id,
          qrUrl: response.qr_url,
          orderId: response.order_id,
          amount: response.amount,
          currency: response.currency
        };
      } else {
        return {
          success: false,
          error: response.message || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∏–Ω–≤–æ–π—Å–∞'
        };
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∏–Ω–≤–æ–π—Å–∞ ODengi:', error);
      return {
        success: false,
        error: error.message || '–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –ø–ª–∞—Ç–µ–∂–Ω–æ–π —Å–∏—Å—Ç–µ–º–æ–π'
      };
    }
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –ø–ª–∞—Ç–µ–∂–∞
  async checkPaymentStatus(invoiceId, orderId) {
    try {
      const requestData = this.createRequest('statusPayment', {
        invoice_id: invoiceId,
        order_id: orderId,
        mark: 0
      });
      
      const response = await this.sendRequest(requestData);
      
      if (response.status === 'ok') {
        return {
          success: true,
          status: response.status_pay,
          amount: response.amount,
          currency: response.currency,
          transId: response.trans_id,
          accountId: response.account_id,
          customerName: response.fname,
          customerPhone: response.mobile
        };
      } else {
        return {
          success: false,
          error: response.message || '–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞'
        };
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ ODengi:', error);
      return {
        success: false,
        error: error.message || '–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –ø–ª–∞—Ç–µ–∂–Ω–æ–π —Å–∏—Å—Ç–µ–º–æ–π'
      };
    }
  }

  // –û—Ç–º–µ–Ω–∞ –∏–Ω–≤–æ–π—Å–∞
  async cancelInvoice(invoiceId) {
    try {
      const requestData = this.createRequest('invoiceCancel', {
        invoice_id: invoiceId
      });
      
      const response = await this.sendRequest(requestData);
      
      if (response.status === 'ok') {
        return {
          success: true,
          message: '–ò–Ω–≤–æ–π—Å —É—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ–Ω–µ–Ω'
        };
      } else {
        return {
          success: false,
          error: response.message || '–û—à–∏–±–∫–∞ –æ—Ç–º–µ–Ω—ã –∏–Ω–≤–æ–π—Å–∞'
        };
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –æ—Ç–º–µ–Ω—ã –∏–Ω–≤–æ–π—Å–∞ ODengi:', error);
      return {
        success: false,
        error: error.message || '–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –ø–ª–∞—Ç–µ–∂–Ω–æ–π —Å–∏—Å—Ç–µ–º–æ–π'
      };
    }
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∏ callback'–∞
  verifyCallbackHash(response) {
    try {
      const hashString = `${response.trans_id}:::${response.status_pay}:::${response.site_id}:::${response.order_id}:::${response.amount}:::${response.currency}:::${response.mktime}:::${response.test}`;
      const calculatedHash = this.createHash(hashString);
      
      console.log('üîê –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∏ callback:');
      console.log('–ü–æ–ª—É—á–µ–Ω–Ω–∞—è –ø–æ–¥–ø–∏—Å—å:', response.hash);
      console.log('–í—ã—á–∏—Å–ª–µ–Ω–Ω–∞—è –ø–æ–¥–ø–∏—Å—å:', calculatedHash);
      
      return response.hash === calculatedHash;
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∏:', error);
      return false;
    }
  }

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ callback'–∞ –æ—Ç O!Dengi
  processCallback(callbackData) {
    try {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–ø–∏—Å—å
      if (!this.verifyCallbackHash(callbackData)) {
        console.error('‚ùå –ù–µ–≤–µ—Ä–Ω–∞—è –ø–æ–¥–ø–∏—Å—å callback');
        return {
          success: false,
          error: '–ù–µ–≤–µ—Ä–Ω–∞—è –ø–æ–¥–ø–∏—Å—å'
        };
      }

      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–ª–∞—Ç–µ–∂–∞
      let paymentStatus;
      switch (callbackData.status_pay) {
        case 1:
          paymentStatus = 'pending';
          break;
        case 2:
          paymentStatus = 'cancelled';
          break;
        case 3:
          paymentStatus = 'paid';
          break;
        default:
          paymentStatus = 'unknown';
      }

      return {
        success: true,
        orderId: callbackData.order_id,
        transId: callbackData.trans_id,
        status: paymentStatus,
        amount: callbackData.amount / 100, // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞—Ç–Ω–æ –≤ —Å–æ–º—ã
        currency: callbackData.currency,
        customerName: callbackData.fname,
        customerPhone: callbackData.mobile,
        accountId: callbackData.account_id,
        isTest: callbackData.test === 1
      };
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ callback:', error);
      return {
        success: false,
        error: error.message || '–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è'
      };
    }
  }
}

module.exports = new ODengiService();
