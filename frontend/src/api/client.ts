import axios from 'axios';

// –û–ø—Ä–µ–¥–µ–ª—è–µ–º –º–æ–±–∏–ª—å–Ω–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ
const isMobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);

// API –∫–ª–∏–µ–Ω—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Å–µ—Ä–≤–µ—Ä–æ–º
export const client = axios.create({
  baseURL: 'https://147.45.141.113:3444/api',
  timeout: 30000, // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º timeout –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö
  headers: {
    'Content-Type': 'application/json',
  },
});

// –ò–Ω—Ç–µ—Ä—Ü–µ–ø—Ç–æ—Ä –¥–ª—è –∑–∞–ø—Ä–æ—Å–æ–≤
client.interceptors.request.use(
  (config) => {
    // –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–∫–µ–Ω –µ—Å–ª–∏ –µ—Å—Ç—å
    const token = localStorage.getItem('token');
    if (token) {
      config.headers.Authorization = `Bearer ${token}`;
    }

    // –õ–æ–≥–∏—Ä—É–µ–º –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤
    if (isMobile) {
      console.log(`üì± –ú–æ–±–∏–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å: ${config.method?.toUpperCase()} ${config.url}`);
      console.log(`üì± User-Agent: ${navigator.userAgent}`);
    }

    return config;
  },
  (error) => {
    console.error('‚ùå Request interceptor error:', error);
    return Promise.reject(error);
  }
);

// –ò–Ω—Ç–µ—Ä—Ü–µ–ø—Ç–æ—Ä –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫
client.interceptors.response.use(
  (response) => {
    if (isMobile) {
      console.log(`üì± –ú–æ–±–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: ${response.config.url} - ${response.status}`);
    } else {
      console.log('‚úÖ API Response:', response.config.url, response.status);
    }
    return response;
  },
  (error) => {
    if (isMobile) {
      console.log(`üì± –ú–æ–±–∏–ª—å–Ω–∞—è –æ—à–∏–±–∫–∞: ${error.config?.url}`);
      console.log(`üì± –ö–æ–¥ –æ—à–∏–±–∫–∏: ${error.code}`);
      console.log(`üì± –°–æ–æ–±—â–µ–Ω–∏–µ: ${error.message}`);
      console.log(`üì± –°—Ç–∞—Ç—É—Å: ${error.response?.status}`);
      console.log(`üì± –î–∞–Ω–Ω—ã–µ:`, error.response?.data);
      
      // –ï—Å–ª–∏ —ç—Ç–æ –æ—à–∏–±–∫–∞ —Å–µ—Ç–∏ –Ω–∞ –º–æ–±–∏–ª—å–Ω–æ–º, –ø—Ä–æ–±—É–µ–º HTTP –∫–∞–∫ fallback
      if (!error.response && error.request && error.code !== 'ECONNABORTED') {
        console.log('üîÑ –ü—Ä–æ–±—É–µ–º HTTP fallback –¥–ª—è –º–æ–±–∏–ª—å–Ω–æ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞...');
        // –ú–µ–Ω—è–µ–º baseURL –Ω–∞ HTTP –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
        client.defaults.baseURL = 'http://147.45.141.113:3001/api';
      }
    } else {
      console.log('üö® API Error:', error.config?.url, error.response?.status, error.response?.data);
    }
    
    // –ï—Å–ª–∏ –ø–æ–ª—É—á–∞–µ–º 401, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    if (error.response?.status === 401) {
      localStorage.removeItem('token');
      window.location.href = '/';
    }
    
    return Promise.reject(error);
  }
);

