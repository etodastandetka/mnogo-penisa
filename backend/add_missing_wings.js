const sqlite3 = require('sqlite3').verbose();
const path = require('path');

const dbPath = path.join(__dirname, 'data/mnogo_rolly.db');
const db = new sqlite3.Database(dbPath);

console.log('üçó –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –∫—Ä—ã–ª—å—è...');

// –î–æ–±–∞–≤–ª—è–µ–º –∫—Ä—ã–ª—å—è 12 —à—Ç
db.run(`
  INSERT OR IGNORE INTO products (name, description, price, image_url, category, is_popular, is_available, created_at)
  VALUES (?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP)
`, ['–ö—Ä—ã–ª—å—è –∫—É—Ä–∏–Ω—ã–µ 12 —à—Ç', '–ö—Ä—ã–ª—å—è –∫—É—Ä–∏–Ω—ã–µ 12 —à—Ç', 590, null, 'wings', 1, 1], function(err) {
  if (err) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è 12 —à—Ç:', err.message);
  } else {
    console.log(`‚úÖ –î–æ–±–∞–≤–ª–µ–Ω—ã –∫—Ä—ã–ª—å—è 12 —à—Ç (ID: ${this.lastID})`);
  }
});

// –î–æ–±–∞–≤–ª—è–µ–º –∫—Ä—ã–ª—å—è 18 —à—Ç
db.run(`
  INSERT OR IGNORE INTO products (name, description, price, image_url, category, is_popular, is_available, created_at)
  VALUES (?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP)
`, ['–ö—Ä—ã–ª—å—è –∫—É—Ä–∏–Ω—ã–µ 18 —à—Ç', '–ö—Ä—ã–ª—å—è –∫—É—Ä–∏–Ω—ã–µ 18 —à—Ç + Coca-Cola 0.3–ª', 850, null, 'wings', 0, 1], function(err) {
  if (err) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è 18 —à—Ç:', err.message);
  } else {
    console.log(`‚úÖ –î–æ–±–∞–≤–ª–µ–Ω—ã –∫—Ä—ã–ª—å—è 18 —à—Ç (ID: ${this.lastID})`);
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
  setTimeout(() => {
    db.all('SELECT id, name, price, description FROM products WHERE category = "wings" ORDER BY name', (err, rows) => {
      if (err) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏:', err.message);
      } else {
        console.log('\n‚úÖ –í—Å–µ –∫—Ä—ã–ª—å—è:');
        rows.forEach(row => {
          console.log(`ID: ${row.id} | ${row.name} | ${row.price} —Å–æ–º | ${row.description || ''}`);
        });
      }
      
      db.close();
    });
  }, 100);
});
