const express = require('express');
const cors = require('cors');
const path = require('path');

const app = express();
const PORT = 3000;

// Middleware
app.use(cors());
app.use(express.json());
app.use(express.urlencoded({ extended: true }));

// –ü–æ–¥–∫–ª—é—á–∞–µ–º —Ä–æ—É—Ç—ã –¥–ª—è –ø–ª–∞—Ç–µ–∂–µ–π FreedomPay
const paymentRoutes = require('./api/paymentRoutes');
app.use('/api/payments', paymentRoutes);

// –ü—Ä–æ—Å—Ç–æ–π healthcheck
app.get('/health', (req, res) => {
  res.json({ 
    status: 'OK', 
    timestamp: new Date().toISOString(),
    message: '–¢–µ—Å—Ç–æ–≤—ã–π —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω'
  });
});

// –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
app.get('/', (req, res) => {
  res.json({
    message: '–¢–µ—Å—Ç–æ–≤—ã–π —Å–µ—Ä–≤–µ—Ä FreedomPay',
    endpoints: {
      health: '/health',
      freedompay: {
        health: '/api/payments/freedompay/health',
        init: '/api/payments/freedompay/init',
        result: '/api/payments/freedompay/result',
        check: '/api/payments/freedompay/check',
        status: '/api/payments/freedompay/status/:orderId'
      }
    }
  });
});

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
app.listen(PORT, () => {
  console.log(`üöÄ –¢–µ—Å—Ç–æ–≤—ã–π —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
  console.log(`üì± URL: http://localhost:${PORT}`);
  console.log(`üè• Healthcheck: http://localhost:${PORT}/health`);
  console.log(`üí∞ FreedomPay health: http://localhost:${PORT}/api/payments/freedompay/health`);
  console.log('');
  console.log('–î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è FreedomPay –∑–∞–ø—É—Å—Ç–∏—Ç–µ:');
  console.log('node test_freedompay.js');
});
