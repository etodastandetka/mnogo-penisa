const crypto = require('crypto');

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è QR-–ø–ª–∞—Ç–µ–∂–µ–π –ø–æ —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ö–†
const QR_PAYMENT_CONFIG = {
  // –ë–∞–Ω–∫–∏ –ö–†
  banks: {
    'mbank': {
      name: '–ú–ë–∞–Ω–∫',
      domain: 'c2b.mbank.kg',
      serviceCode: '1016',
      mcc: '5812' // –†–µ—Å—Ç–æ—Ä–∞–Ω—ã
    },
    'optima': {
      name: '–û–ø—Ç–∏–º–∞ –ë–∞–Ω–∫',
      domain: 'qr.optimabank.kg', 
      serviceCode: '1017',
      mcc: '5812'
    },
    'kicb': {
      name: '–ö–ò–¶–ë',
      domain: 'qr.kicb.kg',
      serviceCode: '1018', 
      mcc: '5812'
    },
    'demir': {
      name: '–î–µ–º–∏—Ä –ë–∞–Ω–∫',
      domain: 'qr.demirbank.kg',
      serviceCode: '1019',
      mcc: '5812'
    }
  },
  
  // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
  defaults: {
    version: '01',
    paymentType: '12', // –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π QR
    currency: '417', // –ö—ã—Ä–≥—ã–∑—Å–∫–∏–π —Å–æ–º
    merchantName: 'Mnogo rolly',
    allowAmountEdit: '11', // –†–∞–∑—Ä–µ—à–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å—É–º–º—ã
    allowIdEdit: '11' // –†–∞–∑—Ä–µ—à–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏–µ ID
  }
};

class QRPaymentService {
  constructor() {
    this.config = QR_PAYMENT_CONFIG;
  }

  /**
   * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç QR-–∫–æ–¥ –¥–ª—è –æ–ø–ª–∞—Ç—ã –ø–æ —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ö–†
   */
  generateQRCode(orderData, bankKey = 'mbank') {
    try {
      const bank = this.config.banks[bankKey];
      if (!bank) {
        throw new Error(`–ë–∞–Ω–∫ ${bankKey} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
      }

      // –§–æ—Ä–º–∏—Ä—É–µ–º –¥–µ—Ç–∞–ª–∏ –ø–ª–∞—Ç–µ–∂–∞
      const paymentDetails = this.buildPaymentDetails(orderData, bank);
      
      // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—É—é —Å—É–º–º—É
      const checksum = this.generateChecksum(paymentDetails);
      
      // –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—É—é —Å—É–º–º—É
      paymentDetails.push(`63${checksum.length.toString().padStart(2, '0')}${checksum}`);
      
      // –û–±—ä–µ–¥–∏–Ω—è–µ–º –≤—Å–µ –¥–µ—Ç–∞–ª–∏
      const detailsString = paymentDetails.join('');
      
      // –§–æ—Ä–º–∏—Ä—É–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É
      const qrUrl = `https://pay.payqr.kg#${detailsString}`;
      
      console.log('üéØ QR-–∫–æ–¥ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω:', {
        bank: bank.name,
        orderId: orderData.orderId,
        amount: orderData.amount,
        qrUrl: qrUrl.substring(0, 100) + '...'
      });

      return {
        success: true,
        qrUrl,
        bank: bank.name,
        orderId: orderData.orderId,
        amount: orderData.amount
      };
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ QR-–∫–æ–¥–∞:', error);
      return {
        success: false,
        error: error.message
      };
    }
  }

  /**
   * –§–æ—Ä–º–∏—Ä—É–µ—Ç –¥–µ—Ç–∞–ª–∏ –ø–ª–∞—Ç–µ–∂–∞ —Å–æ–≥–ª–∞—Å–Ω–æ —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–∏
   */
  buildPaymentDetails(orderData, bank) {
    const details = [];
    
    // 00 - –í–µ—Ä—Å–∏—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞
    details.push(`00${this.config.defaults.version.length.toString().padStart(2, '0')}${this.config.defaults.version}`);
    
    // 01 - –¢–∏–ø –ø–ª–∞—Ç–µ–∂–Ω–æ–π —Å—Å—ã–ª–∫–∏ (–¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π)
    details.push(`01${this.config.defaults.paymentType.length.toString().padStart(2, '0')}${this.config.defaults.paymentType}`);
    
    // 32 - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± —É—Å–ª—É–≥–µ
    const serviceInfo = this.buildServiceInfo(orderData, bank);
    details.push(`32${serviceInfo.length.toString().padStart(2, '0')}${serviceInfo}`);
    
    // 52 - MCC –∫–æ–¥
    details.push(`52${bank.mcc.length.toString().padStart(2, '0')}${bank.mcc}`);
    
    // 53 - –ö–æ–¥ –≤–∞–ª—é—Ç—ã
    details.push(`53${this.config.defaults.currency.length.toString().padStart(2, '0')}${this.config.defaults.currency}`);
    
    // 54 - –°—É–º–º–∞ –ø–ª–∞—Ç–µ–∂–∞ (–≤ —Ç—ã–π–Ω–∞—Ö)
    const amountInTiyin = Math.round(orderData.amount * 100);
    const amountStr = amountInTiyin.toString();
    details.push(`54${amountStr.length.toString().padStart(2, '0')}${amountStr}`);
    
    // 59 - –ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ —É—Å–ª—É–≥
    const merchantName = this.config.defaults.merchantName;
    details.push(`59${merchantName.length.toString().padStart(2, '0')}${merchantName}`);
    
    return details;
  }

  /**
   * –§–æ—Ä–º–∏—Ä—É–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± —É—Å–ª—É–≥–µ (ID 32)
   */
  buildServiceInfo(orderData, bank) {
    const serviceDetails = [];
    
    // 00 - –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä (–¥–æ–º–µ–Ω –±–∞–Ω–∫–∞)
    serviceDetails.push(`00${bank.domain.length.toString().padStart(2, '0')}${bank.domain}`);
    
    // 01 - –ö–æ–¥ —É—Å–ª—É–≥–∏ –≤ –ø–ª–∞—Ç–µ–∂–Ω–æ–º —à–ª—é–∑–µ
    serviceDetails.push(`01${bank.serviceCode.length.toString().padStart(2, '0')}${bank.serviceCode}`);
    
    // 10 - ID –ø–ª–∞—Ç–µ–ª—å—â–∏–∫–∞ (–Ω–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞)
    const payerId = orderData.orderId.toString();
    serviceDetails.push(`10${payerId.length.toString().padStart(2, '0')}${payerId}`);
    
    // 11 - ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
    const transactionId = `txn_${orderData.orderId}_${Date.now()}`;
    serviceDetails.push(`11${transactionId.length.toString().padStart(2, '0')}${transactionId}`);
    
    // 12 - –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å—É–º–º—ã
    serviceDetails.push(`12${this.config.defaults.allowAmountEdit.length.toString().padStart(2, '0')}${this.config.defaults.allowAmountEdit}`);
    
    // 13 - –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è ID –ø–ª–∞—Ç–µ–ª—å—â–∏–∫–∞
    serviceDetails.push(`13${this.config.defaults.allowIdEdit.length.toString().padStart(2, '0')}${this.config.defaults.allowIdEdit}`);
    
    return serviceDetails.join('');
  }

  /**
   * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—É—é —Å—É–º–º—É SHA256
   */
  generateChecksum(paymentDetails) {
    try {
      // –û–±—ä–µ–¥–∏–Ω—è–µ–º –≤—Å–µ –¥–µ—Ç–∞–ª–∏ –∫—Ä–æ–º–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω–æ–π —Å—É–º–º—ã
      const dataString = paymentDetails.join('');
      
      // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ UTF-8 –±–∞–π—Ç—ã
      const dataBytes = Buffer.from(dataString, 'utf8');
      
      // –í—ã—á–∏—Å–ª—è–µ–º SHA256
      const hash = crypto.createHash('sha256').update(dataBytes).digest('hex');
      
      // –£–±–∏—Ä–∞–µ–º –¥–µ—Ñ–∏—Å—ã –∏ –±–µ—Ä–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 4 —Å–∏–º–≤–æ–ª–∞
      const cleanHash = hash.replace(/-/g, '');
      const checksum = cleanHash.slice(-4);
      
      console.log('üîê –ö–æ–Ω—Ç—Ä–æ–ª—å–Ω–∞—è —Å—É–º–º–∞ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∞:', checksum);
      
      return checksum;
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω–æ–π —Å—É–º–º—ã:', error);
      throw error;
    }
  }

  /**
   * –ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –±–∞–Ω–∫–æ–≤
   */
  getAvailableBanks() {
    return Object.keys(this.config.banks).map(key => ({
      key,
      name: this.config.banks[key].name,
      domain: this.config.banks[key].domain
    }));
  }

  /**
   * –í–∞–ª–∏–¥–∏—Ä—É–µ—Ç –¥–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑–∞
   */
  validateOrderData(orderData) {
    const errors = [];
    
    if (!orderData.orderId) {
      errors.push('–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç ID –∑–∞–∫–∞–∑–∞');
    }
    
    if (!orderData.amount || orderData.amount <= 0) {
      errors.push('–ù–µ–≤–µ—Ä–Ω–∞—è —Å—É–º–º–∞ –∑–∞–∫–∞–∑–∞');
    }
    
    if (orderData.amount > 1000000) { // –ú–∞–∫—Å–∏–º—É–º 1 –º–ª–Ω —Å–æ–º
      errors.push('–°—É–º–º–∞ –ø—Ä–µ–≤—ã—à–∞–µ—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –¥–æ–ø—É—Å—Ç–∏–º—É—é');
    }
    
    return {
      isValid: errors.length === 0,
      errors
    };
  }
}

module.exports = { QRPaymentService, qrPaymentService: new QRPaymentService() };
