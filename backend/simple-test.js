console.log('üß™ –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç O!Dengi API');

const crypto = require('crypto');

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
const config = {
  version: 1005,
  sid: '2310370542',
  password: '#S5@8E#G3B(1J4W',
  serverUrl: 'https://mw-api-test.dengi.kg/api/json/json.php',
  lang: 'ru'
};

// –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–¥–ø–∏—Å–∏
function createHash(jsonString, password) {
  return crypto.createHmac('md5', password).update(jsonString).digest('hex');
}

// –°–æ–∑–¥–∞–Ω–∏–µ JSON –±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤
function createCompactJson(obj) {
  return JSON.stringify(obj, null, '').replace(/\s+/g, '');
}

// –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞
console.log('üìù –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞...');

const mktime = Date.now().toString();
const requestData = {
  cmd: 'getOTP',
  version: config.version,
  sid: config.sid,
  mktime,
  lang: config.lang,
  data: { return_url: null }
};

const jsonString = createCompactJson(requestData);
const hash = createHash(jsonString, config.password);
requestData.hash = hash;

console.log('‚úÖ –ó–∞–ø—Ä–æ—Å —Å–æ–∑–¥–∞–Ω:');
console.log(JSON.stringify(requestData, null, 2));

console.log('üîê –ü–æ–¥–ø–∏—Å—å:', hash);
console.log('üìè –î–ª–∏–Ω–∞ JSON:', jsonString.length);

console.log('üéâ –ë–∞–∑–æ–≤—ã–π —Ç–µ—Å—Ç –ø—Ä–æ–π–¥–µ–Ω!');
