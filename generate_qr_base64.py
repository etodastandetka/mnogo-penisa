#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ QR-–∫–æ–¥–∞ –≤ base64 –¥–ª—è –≤—Å—Ç—Ä–∞–∏–≤–∞–Ω–∏—è –≤ HTML
"""

import qrcode
import base64
from io import BytesIO
from PIL import Image, ImageDraw, ImageFont
import os

def generate_qr_base64():
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç QR-–∫–æ–¥ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –µ–≥–æ –≤ base64"""
    
    # –°–æ–∑–¥–∞–µ–º QR-–∫–æ–¥
    qr = qrcode.QRCode(
        version=1,
        error_correction=qrcode.constants.ERROR_CORRECT_L,
        box_size=8,
        border=2,
    )
    
    # –î–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
    qr.add_data('https://mnogo-rolly.online/tips')
    qr.make(fit=True)
    
    # –°–æ–∑–¥–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å –≤—ã—Å–æ–∫–∏–º –∫–æ–Ω—Ç—Ä–∞—Å—Ç–æ–º
    qr_image = qr.make_image(fill_color="black", back_color="white")
    
    # –ò–∑–º–µ–Ω—è–µ–º —Ä–∞–∑–º–µ—Ä
    qr_image = qr_image.resize((160, 160))
    
    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å –±–µ–ª—ã–º —Ñ–æ–Ω–æ–º –∏ —Ä–∞–º–∫–æ–π
    final_image = Image.new('RGB', (200, 240), 'white')
    
    # –î–æ–±–∞–≤–ª—è–µ–º —á–µ—Ä–Ω—É—é —Ä–∞–º–∫—É
    draw = ImageDraw.Draw(final_image)
    draw.rectangle([0, 0, 199, 239], outline='black', width=2)
    
    # –í—Å—Ç–∞–≤–ª—è–µ–º QR-–∫–æ–¥ –≤ —Ü–µ–Ω—Ç—Ä
    qr_x = (200 - 160) // 2
    qr_y = 20
    final_image.paste(qr_image, (qr_x, qr_y))
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç
    try:
        font = ImageFont.truetype("arial.ttf", 16)
    except:
        font = ImageFont.load_default()
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
    title = "QR –∫–æ–¥ –¥–ª—è —á–∞–µ–≤—ã—Ö"
    title_bbox = draw.textbbox((0, 0), title, font=font)
    title_width = title_bbox[2] - title_bbox[0]
    title_x = (200 - title_width) // 2
    draw.text((title_x, 190), title, fill="black", font=font)
    
    # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ base64
    buffer = BytesIO()
    final_image.save(buffer, format='PNG')
    img_str = base64.b64encode(buffer.getvalue()).decode()
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–∞–∫–∂–µ –∫–∞–∫ —Ñ–∞–π–ª
    output_path = "frontend/public/images/qr-tips.png"
    os.makedirs(os.path.dirname(output_path), exist_ok=True)
    final_image.save(output_path)
    
    # –°–æ–∑–¥–∞–µ–º HTML —Ñ–∞–π–ª —Å base64
    html_content = f"""
<!DOCTYPE html>
<html>
<head>
    <title>QR Code Base64</title>
</head>
<body>
    <h2>QR Code Base64 –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏ –≤ HTML:</h2>
    <textarea rows="10" cols="80" readonly>
data:image/png;base64,{img_str}
    </textarea>
    
    <h2>–ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä:</h2>
    <img src="data:image/png;base64,{img_str}" alt="QR –∫–æ–¥ –¥–ª—è —á–∞–µ–≤—ã—Ö" />
    
    <h2>HTML –∫–æ–¥ –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏:</h2>
    <textarea rows="5" cols="80" readonly>
&lt;img src="data:image/png;base64,{img_str}" alt="QR –∫–æ–¥ –¥–ª—è —á–∞–µ–≤—ã—Ö" style="width: 80px; height: 80px; margin: 0 auto; display: block;" /&gt;
    </textarea>
</body>
</html>
"""
    
    with open("qr_base64_output.html", "w", encoding="utf-8") as f:
        f.write(html_content)
    
    print(f"‚úÖ QR-–∫–æ–¥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤: {output_path}")
    print(f"‚úÖ HTML —Ñ–∞–π–ª —Å base64 —Å–æ–∑–¥–∞–Ω: qr_base64_output.html")
    print(f"üìè –†–∞–∑–º–µ—Ä: {final_image.size}")
    print(f"üé® –¶–≤–µ—Ç–∞: —á–µ—Ä–Ω—ã–π QR-–∫–æ–¥ –Ω–∞ –±–µ–ª–æ–º —Ñ–æ–Ω–µ —Å —Ä–∞–º–∫–æ–π")
    
    return img_str

if __name__ == "__main__":
    try:
        import qrcode
    except ImportError:
        print("‚ùå –ú–æ–¥—É–ª—å qrcode –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º...")
        import subprocess
        subprocess.check_call(["pip", "install", "qrcode[pil]"])
        import qrcode
    
    generate_qr_base64()
