import { Product, ProductCategory } from '../types';
import { client } from './client';

export const productsApi = {
  // –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –ø—Ä–æ–¥—É–∫—Ç—ã
  getAll: async (): Promise<Product[]> => {
    try {
      console.log('üîç –ó–∞–ø—Ä–æ—Å —Ç–æ–≤–∞—Ä–æ–≤...');
      const response = await client.get('/products');
      console.log('‚úÖ –ü–æ–ª—É—á–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤:', response.data?.length || 0);
      
      if (response.data && Array.isArray(response.data)) {
        return response.data;
      } else {
        console.error('‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞:', response.data);
        throw new Error('–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞');
      }
    } catch (error: any) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤:', error);
      
      // –î–µ—Ç–∞–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –¥–ª—è iPhone
      if (error.code === 'ERR_NETWORK') {
        console.log('üåê –û—à–∏–±–∫–∞ —Å–µ—Ç–∏ - –≤–æ–∑–º–æ–∂–Ω–æ –ø—Ä–æ–±–ª–µ–º—ã —Å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ–º');
        throw new Error('–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ');
      }
      
      // –ï—Å–ª–∏ —ç—Ç–æ –æ—à–∏–±–∫–∞ —Å–µ—Ç–∏, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤
      if (!error.response && error.request) {
        console.log('üì° –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ - –Ω–µ—Ç –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞');
        throw new Error('–°–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–æ–º');
      }
      
      // –ï—Å–ª–∏ —ç—Ç–æ –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞
      if (error.response?.status >= 500) {
        console.log('üñ•Ô∏è –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞:', error.response.status);
        throw new Error('–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ');
      }
      
      // –ï—Å–ª–∏ —ç—Ç–æ –æ—à–∏–±–∫–∞ –∫–ª–∏–µ–Ω—Ç–∞
      if (error.response?.status >= 400) {
        console.log('üì± –û—à–∏–±–∫–∞ –∫–ª–∏–µ–Ω—Ç–∞:', error.response.status);
        throw new Error('–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –¥–∞–Ω–Ω—ã—Ö');
      }
      
      // –ï—Å–ª–∏ —ç—Ç–æ —Ç–∞–π–º–∞—É—Ç
      if (error.code === 'ECONNABORTED') {
        console.log('‚è∞ –¢–∞–π–º–∞—É—Ç –∑–∞–ø—Ä–æ—Å–∞');
        throw new Error('–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞');
      }
      
      // –ï—Å–ª–∏ —ç—Ç–æ –æ—à–∏–±–∫–∞ CORS (—á–∞—Å—Ç–æ –Ω–∞ iPhone)
      if (error.message && error.message.includes('CORS')) {
        console.log('üö´ –û—à–∏–±–∫–∞ CORS');
        throw new Error('–û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–µ—Ä–≤–µ—Ä—É. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É');
      }
      
      throw new Error(error.message || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ç–æ–≤–∞—Ä–æ–≤');
    }
  },

  // –ü–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
  getByCategory: async (category: ProductCategory): Promise<Product[]> => {
    try {
      console.log('üîç –ó–∞–ø—Ä–æ—Å —Ç–æ–≤–∞—Ä–æ–≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:', category);
      const response = await client.get(`/products?category=${category}`);
      console.log('‚úÖ –ü–æ–ª—É—á–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏', category, ':', response.data?.length || 0);
      return response.data || [];
    } catch (error: any) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:', error);
      
      if (!error.response && error.request) {
        throw new Error('–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º');
      }
      
      throw new Error(error.message || '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏');
    }
  },

  // –ü–æ–ª—É—á–∏—Ç—å –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã
  getPopular: async (): Promise<Product[]> => {
    try {
      console.log('üîç –ó–∞–ø—Ä–æ—Å –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤...');
      const response = await client.get('/products');
      // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–µ—Ä–≤—ã–µ 6 —Ç–æ–≤–∞—Ä–æ–≤ –∫–∞–∫ –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ
      const popularProducts = (response.data || []).slice(0, 6);
      console.log('‚úÖ –ü–æ–ª—É—á–µ–Ω–æ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤:', popularProducts.length);
      return popularProducts;
    } catch (error: any) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤:', error);
      
      if (!error.response && error.request) {
        throw new Error('–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º');
      }
      
      throw new Error(error.message || '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤');
    }
  },

  // –ü–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç –ø–æ ID
  getById: async (id: string): Promise<Product> => {
    try {
      console.log('üîç –ó–∞–ø—Ä–æ—Å —Ç–æ–≤–∞—Ä–∞ –ø–æ ID:', id);
      const response = await client.get(`/products/${id}`);
      console.log('‚úÖ –¢–æ–≤–∞—Ä –Ω–∞–π–¥–µ–Ω:', response.data?.name);
      return response.data;
    } catch (error: any) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ–≤–∞—Ä–∞ –ø–æ ID:', error);
      
      if (error.response?.status === 404) {
        throw new Error('–¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω');
      }
      
      if (!error.response && error.request) {
        throw new Error('–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º');
      }
      
      throw new Error(error.message || '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ–≤–∞—Ä–∞');
    }
  },

  // –ü–æ–∏—Å–∫ –ø—Ä–æ–¥—É–∫—Ç–æ–≤
  search: async (query: string): Promise<Product[]> => {
    try {
      console.log('üîç –ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤:', query);
      const response = await client.get(`/products?search=${encodeURIComponent(query)}`);
      console.log('‚úÖ –ù–∞–π–¥–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤:', response.data?.length || 0);
      return response.data || [];
    } catch (error: any) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤:', error);
      
      if (!error.response && error.request) {
        throw new Error('–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º');
      }
      
      throw new Error(error.message || '–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤');
    }
  },
};
