const sqlite3 = require('sqlite3').verbose();
const path = require('path');

// –ü—É—Ç—å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
const dbPath = path.join(__dirname, 'database.sqlite');

// –°–æ–∑–¥–∞–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
const db = new sqlite3.Database(dbPath);

console.log('üóëÔ∏è  –°–∫—Ä–∏–ø—Ç –ø–æ–ª–Ω–æ–π –æ—á–∏—Å—Ç–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∑–∞–ø—É—â–µ–Ω');
console.log('üìÅ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö:', dbPath);
console.log('‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç —É–¥–∞–ª–∏—Ç –í–°–ï –¥–∞–Ω–Ω—ã–µ!');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª–Ω–æ–π –æ—á–∏—Å—Ç–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
function clearAllData() {
  return new Promise((resolve, reject) => {
    console.log('\nüîÑ –ù–∞—á–∏–Ω–∞–µ–º –ø–æ–ª–Ω—É—é –æ—á–∏—Å—Ç–∫—É –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...');
    
    // –ù–∞—á–∏–Ω–∞–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é
    db.serialize(() => {
      db.run('BEGIN TRANSACTION');
      
      try {
        // 1. –£–¥–∞–ª—è–µ–º –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∑–∞–∫–∞–∑–æ–≤
        db.run('DELETE FROM order_items', (err) => {
          if (err) {
            console.error('‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è order_items:', err.message);
            db.run('ROLLBACK');
            reject(err);
            return;
          }
          console.log('‚úÖ order_items –æ—á–∏—â–µ–Ω—ã');
        });
        
        // 2. –£–¥–∞–ª—è–µ–º –≤—Å–µ –∑–∞–∫–∞–∑—ã
        db.run('DELETE FROM orders', (err) => {
          if (err) {
            console.error('‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è orders:', err.message);
            db.run('ROLLBACK');
            reject(err);
            return;
          }
          console.log('‚úÖ orders –æ—á–∏—â–µ–Ω—ã');
        });
        
        // 3. –£–¥–∞–ª—è–µ–º –≤—Å–µ —Ç–æ–≤–∞—Ä—ã
        db.run('DELETE FROM products', (err) => {
          if (err) {
            console.error('‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è products:', err.message);
            db.run('ROLLBACK');
            reject(err);
            return;
          }
          console.log('‚úÖ products –æ—á–∏—â–µ–Ω—ã');
        });
        
        // 4. –£–¥–∞–ª—è–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–∫—Ä–æ–º–µ –∞–¥–º–∏–Ω–∞)
        db.run('DELETE FROM users WHERE is_admin = 0', (err) => {
          if (err) {
            console.error('‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:', err.message);
            db.run('ROLLBACK');
            reject(err);
            return;
          }
          console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ (–Ω–µ –∞–¥–º–∏–Ω—ã) —É–¥–∞–ª–µ–Ω—ã');
        });
        
        // 5. –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∞–≤—Ç–æ–∏–Ω–∫—Ä–µ–º–µ–Ω—Ç –¥–ª—è –≤—Å–µ—Ö —Ç–∞–±–ª–∏—Ü
        db.run('DELETE FROM sqlite_sequence', (err) => {
          if (err) {
            console.error('‚ùå –û—à–∏–±–∫–∞ —Å–±—Ä–æ—Å–∞ –∞–≤—Ç–æ–∏–Ω–∫—Ä–µ–º–µ–Ω—Ç–æ–≤:', err.message);
            db.run('ROLLBACK');
            reject(err);
            return;
          }
          console.log('‚úÖ –í—Å–µ –∞–≤—Ç–æ–∏–Ω–∫—Ä–µ–º–µ–Ω—Ç—ã —Å–±—Ä–æ—à–µ–Ω—ã');
        });
        
        // 6. –§–∏–∫—Å–∏—Ä—É–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é
        db.run('COMMIT', (err) => {
          if (err) {
            console.error('‚ùå –û—à–∏–±–∫–∞ —Ñ–∏–∫—Å–∞—Ü–∏–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏:', err.message);
            db.run('ROLLBACK');
            reject(err);
            return;
          }
          console.log('‚úÖ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–∞');
          resolve();
        });
        
      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –≤ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏:', error.message);
        db.run('ROLLBACK');
        reject(error);
      }
    });
  });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
function checkResult() {
  return new Promise((resolve, reject) => {
    console.log('\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –æ—á–∏—Å—Ç–∫–∏...');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫–∞–∑–æ–≤
    db.get('SELECT COUNT(*) as count FROM orders', (err, result) => {
      if (err) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ orders:', err.message);
        reject(err);
        return;
      }
      console.log(`üìä –ó–∞–∫–∞–∑–æ–≤ –≤ –±–∞–∑–µ: ${result.count}`);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∑–∞–∫–∞–∑–æ–≤
      db.get('SELECT COUNT(*) as count FROM order_items', (err, result2) => {
        if (err) {
          console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ order_items:', err.message);
          reject(err);
          return;
        }
        console.log(`üìä –≠–ª–µ–º–µ–Ω—Ç–æ–≤ –∑–∞–∫–∞–∑–æ–≤ –≤ –±–∞–∑–µ: ${result2.count}`);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤
        db.get('SELECT COUNT(*) as count FROM products', (err, result3) => {
          if (err) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ products:', err.message);
            reject(err);
            return;
          }
          console.log(`üìä –¢–æ–≤–∞—Ä–æ–≤ –≤ –±–∞–∑–µ: ${result3.count}`);
          
          // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
          db.get('SELECT COUNT(*) as count FROM users', (err, result4) => {
            if (err) {
              console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ users:', err.message);
              reject(err);
              return;
            }
            console.log(`üìä –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –±–∞–∑–µ: ${result4.count}`);
            
            if (result.count === 0 && result2.count === 0 && result3.count === 0) {
              console.log('üéâ –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');
            } else {
              console.log('‚ö†Ô∏è  –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —Å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è–º–∏');
            }
            
            resolve();
          });
        });
      });
    });
  });
}

// –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
async function main() {
  try {
    // –û—á–∏—â–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ
    await clearAllData();
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    await checkResult();
    
    console.log('\n‚úÖ –°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!');
    console.log('üí° –¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å seed_products.js –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤');
    
  } catch (error) {
    console.error('\n‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Å–∫—Ä–∏–ø—Ç–∞:', error.message);
    process.exit(1);
  } finally {
    // –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
    db.close((err) => {
      if (err) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:', err.message);
      } else {
        console.log('üîí –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –∑–∞–∫—Ä—ã—Ç–æ');
      }
      process.exit(0);
    });
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç
main();
